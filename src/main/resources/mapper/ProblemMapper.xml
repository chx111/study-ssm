<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.whq6.study.mapper.ProblemMapper">
  <resultMap id="BaseResultMap" type="top.whq6.study.entity.Problem">
    <id column="problem_bank_id" jdbcType="INTEGER" property="problemBankId" />
    <result column="problem_questiion_id" jdbcType="INTEGER" property="problemQuestiionId" />
    <result column="problem_sequence_no" jdbcType="INTEGER" property="problemSequenceNo" />
    <result column="problem_test_id" jdbcType="INTEGER" property="problemTestId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    problem_bank_id, problem_questiion_id, problem_sequence_no, problem_test_id
  </sql>
  <select id="selectByExample" parameterType="top.whq6.study.entity.ProblemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from problem
    where problem_bank_id = #{problemBankId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from problem
    where problem_bank_id = #{problemBankId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.whq6.study.entity.ProblemExample">
    delete from problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.whq6.study.entity.Problem">
    insert into problem (problem_bank_id, problem_questiion_id, 
      problem_sequence_no, problem_test_id)
    values (#{problemBankId,jdbcType=INTEGER}, #{problemQuestiionId,jdbcType=INTEGER}, 
      #{problemSequenceNo,jdbcType=INTEGER}, #{problemTestId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="top.whq6.study.entity.Problem">
    insert into problem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="problemBankId != null">
        problem_bank_id,
      </if>
      <if test="problemQuestiionId != null">
        problem_questiion_id,
      </if>
      <if test="problemSequenceNo != null">
        problem_sequence_no,
      </if>
      <if test="problemTestId != null">
        problem_test_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="problemBankId != null">
        #{problemBankId,jdbcType=INTEGER},
      </if>
      <if test="problemQuestiionId != null">
        #{problemQuestiionId,jdbcType=INTEGER},
      </if>
      <if test="problemSequenceNo != null">
        #{problemSequenceNo,jdbcType=INTEGER},
      </if>
      <if test="problemTestId != null">
        #{problemTestId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.whq6.study.entity.ProblemExample" resultType="java.lang.Long">
    select count(*) from problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update problem
    <set>
      <if test="record.problemBankId != null">
        problem_bank_id = #{record.problemBankId,jdbcType=INTEGER},
      </if>
      <if test="record.problemQuestiionId != null">
        problem_questiion_id = #{record.problemQuestiionId,jdbcType=INTEGER},
      </if>
      <if test="record.problemSequenceNo != null">
        problem_sequence_no = #{record.problemSequenceNo,jdbcType=INTEGER},
      </if>
      <if test="record.problemTestId != null">
        problem_test_id = #{record.problemTestId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update problem
    set problem_bank_id = #{record.problemBankId,jdbcType=INTEGER},
      problem_questiion_id = #{record.problemQuestiionId,jdbcType=INTEGER},
      problem_sequence_no = #{record.problemSequenceNo,jdbcType=INTEGER},
      problem_test_id = #{record.problemTestId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.whq6.study.entity.Problem">
    update problem
    <set>
      <if test="problemQuestiionId != null">
        problem_questiion_id = #{problemQuestiionId,jdbcType=INTEGER},
      </if>
      <if test="problemSequenceNo != null">
        problem_sequence_no = #{problemSequenceNo,jdbcType=INTEGER},
      </if>
      <if test="problemTestId != null">
        problem_test_id = #{problemTestId,jdbcType=INTEGER},
      </if>
    </set>
    where problem_bank_id = #{problemBankId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.whq6.study.entity.Problem">
    update problem
    set problem_questiion_id = #{problemQuestiionId,jdbcType=INTEGER},
      problem_sequence_no = #{problemSequenceNo,jdbcType=INTEGER},
      problem_test_id = #{problemTestId,jdbcType=INTEGER}
    where problem_bank_id = #{problemBankId,jdbcType=INTEGER}
  </update>
</mapper>