<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.whq6.study.mapper.UsercaseillMapper">
  <resultMap id="BaseResultMap" type="top.whq6.study.entity.Usercaseill">
    <id column="usercaseill_id" jdbcType="INTEGER" property="usercaseillId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="caseillness_id" jdbcType="INTEGER" property="caseillnessId" />
    <result column="usercaseill_user_id" jdbcType="INTEGER" property="usercaseillUserId" />
    <result column="usercaseill_caseillness_id" jdbcType="INTEGER" property="usercaseillCaseillnessId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    usercaseill_id, user_id, caseillness_id, usercaseill_user_id, usercaseill_caseillness_id
  </sql>
  <select id="selectByExample" parameterType="top.whq6.study.entity.UsercaseillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from usercaseill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from usercaseill
    where usercaseill_id = #{usercaseillId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from usercaseill
    where usercaseill_id = #{usercaseillId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.whq6.study.entity.UsercaseillExample">
    delete from usercaseill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.whq6.study.entity.Usercaseill">
    insert into usercaseill (usercaseill_id, user_id, caseillness_id, 
      usercaseill_user_id, usercaseill_caseillness_id
      )
    values (#{usercaseillId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{caseillnessId,jdbcType=INTEGER}, 
      #{usercaseillUserId,jdbcType=INTEGER}, #{usercaseillCaseillnessId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.whq6.study.entity.Usercaseill">
    insert into usercaseill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usercaseillId != null">
        usercaseill_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="caseillnessId != null">
        caseillness_id,
      </if>
      <if test="usercaseillUserId != null">
        usercaseill_user_id,
      </if>
      <if test="usercaseillCaseillnessId != null">
        usercaseill_caseillness_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usercaseillId != null">
        #{usercaseillId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="caseillnessId != null">
        #{caseillnessId,jdbcType=INTEGER},
      </if>
      <if test="usercaseillUserId != null">
        #{usercaseillUserId,jdbcType=INTEGER},
      </if>
      <if test="usercaseillCaseillnessId != null">
        #{usercaseillCaseillnessId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.whq6.study.entity.UsercaseillExample" resultType="java.lang.Long">
    select count(*) from usercaseill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update usercaseill
    <set>
      <if test="record.usercaseillId != null">
        usercaseill_id = #{record.usercaseillId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.caseillnessId != null">
        caseillness_id = #{record.caseillnessId,jdbcType=INTEGER},
      </if>
      <if test="record.usercaseillUserId != null">
        usercaseill_user_id = #{record.usercaseillUserId,jdbcType=INTEGER},
      </if>
      <if test="record.usercaseillCaseillnessId != null">
        usercaseill_caseillness_id = #{record.usercaseillCaseillnessId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update usercaseill
    set usercaseill_id = #{record.usercaseillId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      caseillness_id = #{record.caseillnessId,jdbcType=INTEGER},
      usercaseill_user_id = #{record.usercaseillUserId,jdbcType=INTEGER},
      usercaseill_caseillness_id = #{record.usercaseillCaseillnessId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.whq6.study.entity.Usercaseill">
    update usercaseill
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="caseillnessId != null">
        caseillness_id = #{caseillnessId,jdbcType=INTEGER},
      </if>
      <if test="usercaseillUserId != null">
        usercaseill_user_id = #{usercaseillUserId,jdbcType=INTEGER},
      </if>
      <if test="usercaseillCaseillnessId != null">
        usercaseill_caseillness_id = #{usercaseillCaseillnessId,jdbcType=INTEGER},
      </if>
    </set>
    where usercaseill_id = #{usercaseillId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.whq6.study.entity.Usercaseill">
    update usercaseill
    set user_id = #{userId,jdbcType=INTEGER},
      caseillness_id = #{caseillnessId,jdbcType=INTEGER},
      usercaseill_user_id = #{usercaseillUserId,jdbcType=INTEGER},
      usercaseill_caseillness_id = #{usercaseillCaseillnessId,jdbcType=INTEGER}
    where usercaseill_id = #{usercaseillId,jdbcType=INTEGER}
  </update>
</mapper>